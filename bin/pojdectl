#!/bin/sh

# Define configuration scripts
configuration_scripts="parameters user code-server ttyd novnc jupyter-lab nginx ssh git modules webwormhole clean"

# Parse command
case "$1" in
apply)
    # Remove the old container if it exists
    if [ -n "$(docker ps -q -a -f name=pojde-ng)" ]; then
        $0 remove
    fi

    # Check if we are on systemd or not
    docker_flags=""
    docker_args=""
    docker_image="pojntfx/pojde-ng:latest"
    if [ ! -n "$(which systemctl)" ]; then
        export docker_flags="-e POJDE_NG_OPENRC=true"
        export docker_args="/sbin/openrc-init"
        export docker_image="pojntfx/pojde-ng:latest-openrc"
    fi

    # Pull the newest image
    docker pull "${docker_image}"

    # Create the container
    docker run -d --name pojde-ng --privileged --restart always -v /sys/fs/cgroup:/sys/fs/cgroup:ro -v pojde-ng-preferences:/opt/pojde-ng/preferences:z -v pojde-ng-ca:/opt/pojde-ng/ca:z -v pojde-home-root:/root:z -v pojde-home-user:/home:z -p 18000-18004:8000-8004 -p 18022:8022 ${docker_flags} ${docker_image} ${docker_args}

    # Run configuration scripts' upgrade hooks
    for script in $configuration_scripts; do
        docker exec -it ${docker_flags} pojde-ng bash -c ". /opt/pojde-ng/configuration/${script}.sh && upgrade"
    done
    ;;

start)
    # Start the container
    docker start pojde-ng
    ;;

stop)
    # Stop the container
    docker stop pojde-ng
    ;;

restart)
    # Restart the container
    docker restart pojde-ng
    ;;

status)
    # Get container's status
    if [ "$(docker inspect --type container -f '{{.State.Running}}' pojde-ng)" = 'true' ]; then
        echo "pojde-ng is running."
    else
        echo "pojde-ng is not running."
    fi
    ;;

info)
    # Get container's info
    docker ps -f "name=pojde-ng"
    ;;

inspect)
    # Inspect the container
    docker inspect --type container pojde-ng
    ;;

remove)
    # Remove the container
    read -p "Removing the pojde-ng container might lead to data loss (see --help). Really remove pojde-ng (y/n)? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        docker rm -f pojde-ng
    fi
    ;;

refresh)
    # Reset the service configurations
    read -p "Refreshing pojde-ng might lead to data loss (see --help). Really refresh pojde-ng (y/n)? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        # Run configuration scripts' refresh hooks
        for script in $configuration_scripts; do
            docker exec -it ${docker_flags} pojde-ng bash -c ". /opt/pojde-ng/configuration/${script}.sh && refresh"
        done

        docker rm -f pojde-ng

        $0 apply
    fi
    ;;

reset)
    # Wipe the home directories
    read -p "Resetting pojde-ng will lead to data loss (see --help). Really reset pojde-ng (y/n)? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        docker rm -f pojde-ng

        docker volume rm pojde-home-root pojde-home-user

        $0 apply
    fi
    ;;

purge)
    # Remove the container and it's volumes
    read -p "Purging pojde-ng will lead to data loss (see --help). Really purge pojde-ng (y/n)? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        docker rm -f pojde-ng

        docker volume rm pojde-ng-preferences pojde-ng-ca pojde-home-root pojde-home-user
    fi
    ;;

logs)
    # Tail the logs
    if [ -n "$(docker exec -it pojde-ng which systemctl)" ]; then
        docker exec -it pojde-ng journalctl -f
    else
        docker logs -f pojde-ng
    fi
    ;;

enter)
    # Open a shell in the container
    docker exec -it pojde-ng bash
    ;;

update-pojdectl)
    # Self-Update pojdectl
    sudo curl -L -o /usr/bin/pojdectl https://raw.githubusercontent.com/pojntfx/pojde-ng/main/bin/pojdectl
    sudo chmod +x /usr/bin/pojdectl
    ;;

*)
    [ "$1" != '--help' ] && printf "Unknown command \"$1\".\n\n"

    echo "pojdectl is the management tool for pojde.

Usage:

    apply:              (Re-)creates the container, interactively configures it, and restarts it's services
    start:              Starts the container
    stop:               Stops the container
    restart:            Restarts the container
    status:             Shows whether the container is running
    info:               Shows overview of the container
    inspect:            Shows details about the container
    remove:             Removes the container, but keeps configurations, home directories, preferences & CA
    refresh:            Wipes service configurations, but keeps home directories, preferences & CA
    reset:              Wipes home directories, but keeps preferences & CA
    purge:              Wipes everything
    logs:               Shows the system logs
    enter:              Opens a shell in the container
    update-pojdectl:    Updates pojdectl

For more information, please visit https://github.com/pojntfx/pojde-ng#Usage."
    ;;
esac
